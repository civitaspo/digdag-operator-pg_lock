plugins {
    id 'scala'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

group = 'pro.civitaspo'
version = '0.0.1.pre3'

def digdagVersion = '0.9.39'
def scalaSemanticVersion = "2.13.0"
def depScalaVersion = "2.13"

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://dl.bintray.com/digdag/maven'
    }
}

dependencies {
    compile group: 'io.digdag', name: 'digdag-spi', version: digdagVersion
    compile group: 'io.digdag', name: 'digdag-plugin-utils', version: digdagVersion

    // Follow digdag core dependencies. These are used only when compiling.
    // ref. https://github.com/treasure-data/digdag/tree/v0.9.39/digdag-core/build.gradle#L16-L17
    compile group: 'org.jdbi', name: 'jdbi', version: '2.75'
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.4.7'

    compile group: 'org.scala-lang', name: 'scala-library', version: scalaSemanticVersion
    compile group: 'org.flywaydb', name: 'flyway-core', version: '6.0.4'
    compile group: 'com.typesafe.scala-logging', name: "scala-logging_$depScalaVersion", version: '3.9.2'

    testCompile group: 'org.scalatest', name: "scalatest_$depScalaVersion", version: '3.0.8'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'io.digdag', name: 'digdag-cli', version: digdagVersion
}

shadowJar {
    classifier = null
    dependencies {
        exclude(dependency('io.digdag:.*'))
        exclude(dependency('com.fasterxml.jackson.*:.*:.*'))
        exclude(dependency('com.google.inject:.*:.*'))
        exclude(dependency('org.jdbi:jdbi:.*'))
        exclude(dependency('com.zaxxer:HikariCP:.*'))
    }
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
    repositories {
        maven {
            url "$buildDir/repo"
        }
    }
}

test {
    jvmArgs '-Duser.language=en -Duser.country=US'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileScala.options.encoding = 'UTF-8'
compileTestScala.options.encoding = 'UTF-8'
compileScala.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"

